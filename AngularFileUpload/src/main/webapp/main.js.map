{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/form-upload/form-upload.component.css","webpack:///./src/app/form-upload/form-upload.component.html","webpack:///./src/app/form-upload/form-upload.component.ts","webpack:///./src/app/upload-file.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\nA\\n<form-upload></form-upload>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'AngularFileUpload';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { FormUploadComponent } from './form-upload/form-upload.component';\nimport {UploadFileService} from './upload-file.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FormUploadComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [UploadFileService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"progress\\\">\\n\\t<div class=\\\"progress-bar progress-bar-info progress-bar-striped\\\"\\n\\t\\trole=\\\"progressbar\\\" attr.aria-valuenow=\\\"{{progress.percentage}}\\\"\\n\\t\\taria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\"\\n\\t\\t[ngStyle]=\\\"{width:progress.percentage+'%'}\\\">\\n\\t\\t{{progress.percentage}}%</div>\\n</div>\\n \\n<label class=\\\"btn btn-default\\\">\\n\\t<input type=\\\"file\\\" (change)=\\\"selectFile($event)\\\">\\n</label>\\n \\n<button class=\\\"btn btn-success\\\" [disabled]=\\\"!selectedFiles\\\"\\n\\t(click)=\\\"upload()\\\">Upload</button>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpResponse, HttpEventType } from '@angular/common/http';\nimport { UploadFileService } from '../upload-file.service';\n \n@Component({\n  selector: 'form-upload',\n  templateUrl: './form-upload.component.html',\n  styleUrls: ['./form-upload.component.css']\n})\nexport class FormUploadComponent implements OnInit {\n \n  selectedFiles: FileList\n  currentFileUpload: File\n  progress: { percentage: number } = { percentage: 0 }\n \n  constructor(private uploadService: UploadFileService) { }\n \n  ngOnInit() {\n  }\n \n  selectFile(event) {\n    this.selectedFiles = event.target.files;\n  }\n \n  upload() {\n    this.progress.percentage = 0;\n \n    this.currentFileUpload = this.selectedFiles.item(0)\n    this.uploadService.pushFileToStorage(this.currentFileUpload).subscribe(event => {\n      if (event.type === HttpEventType.UploadProgress) {\n        this.progress.percentage = Math.round(100 * event.loaded / event.total);\n      } else if (event instanceof HttpResponse) {\n        console.log('File is completely uploaded!');\n      }\n\t  console.log('File FULLY uploaded!');\n\n    })\n \n    this.selectedFiles = undefined\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpRequest, HttpEvent} from '@angular/common/http';\nimport {Observable} from 'rxjs/Observable';\n\n@Injectable() \nexport class UploadFileService {\n \n  constructor(private http: HttpClient) {}\n \n  pushFileToStorage(file: File): Observable<HttpEvent<{}>> {\n    let formdata: FormData = new FormData();\n \n    formdata.append('file', file);\n \n    const req = new HttpRequest('POST', 'uploadfile', formdata, {\n      reportProgress: true,\n      responseType: 'text'\n    });\n \n    return this.http.request(req);\n  }\n \n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}